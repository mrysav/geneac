test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

# Use rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)
# amazon:
#   service: S3
#   access_key_id: <%= ENV['AWS_ACCESS_KEY_ID'] %>
#   secret_access_key: <%= ENV['AWS_SECRET_ACCESS_KEY'] %>
#   bucket: <%= ENV['S3_BUCKET_NAME'] %>
#   region: <%= ENV['AWS_REGION'] %>
#   <% if ENV['S3_ENDPOINT'] %>
#   endpoint: <%= ENV['S3_ENDPOINT'] %>
#   <% end %>

# minio:
#   service: S3
#   access_key_id: <%= ENV['MINIO_ACCESS_KEY'] %>
#   secret_access_key: <%= ENV['MINIO_SECRET_KEY'] %>
#   region: us-east-1 # Does not matter with Minio
#   bucket: <%= ENV['MINIO_BUCKET_NAME'] %>
#   endpoint: <%= ENV['MINIO_ENDPOINT'] %>
#   force_path_style: true

microsoft:
  service: AzureStorage
  storage_account_name: <%= ENV['AZURE_STORAGE_ACCOUNT_NAME'] %>
  storage_access_key: <%= ENV['AZURE_STORAGE_ACCESS_KEY'] %>
  container: <%= ENV['AZURE_STORAGE_CONTAINER'] %>


# Remember not to checkin your GCS keyfile to a repository
# google:
#   service: GCS
#   project: your_project
#   credentials: <%= Rails.root.join("path/to/gcs.keyfile") %>
#   bucket: your_own_bucket

# Use rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
# microsoft:
#   service: AzureStorage
#   storage_account_name: your_account_name
#   storage_access_key: <%= Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
#   container: your_container_name

# mirror:
#   service: Mirror
#   primary: local
#   mirrors: [ amazon, google, microsoft ]
