# Name of your application. Used to uniquely configure containers.
service: geneac

# Name of the container image.
image: ghcr.io/YOUR-USERNAME/geneac-kamal

# Deploy to these servers.
servers:
  web:
    hosts:
      - YOUR.HOSTNAME.HERE
    options:
      "add-host": host.docker.internal:host-gateway
  worker:
    hosts:
      - YOUR.HOSTNAME.HERE
    options:
      "add-host": host.docker.internal:host-gateway
    env:
      QUEUE: "*"
    cmd:
      - bundle exec rake resque:work

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  server: ghcr.io
  username: YOUR-USERNAME

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
env:
  clear:
    AWS_REGION: us-east-2
    RAILS_LOG_TO_STDOUT: true
    RAILS_SERVE_STATIC_FILES: true
    REDIS_URL: redis://host.docker.internal:6379
  secret:
    - SECRET_KEY_BASE
    - DATABASE_URL
    - AZURE_STORAGE_ACCOUNT_NAME
    - AZURE_STORAGE_ACCESS_KEY
    - AZURE_STORAGE_CONTAINER

# Use a different ssh user than root
ssh:
  user: azureuser

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

builder:
  multiarch: false

# Use accessory services (secrets come from .env).
accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql.erb:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
  redis:
    image: redis:latest
    roles:
      - web
      - worker
    port: "6379:6379"
    volumes:
      - /var/lib/redis:/data

traefik:
  host_port: 8080
